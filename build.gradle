plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
}

group = 'latecurio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-webflux') {
		exclude group: 'org.springframework.boot',
				module: 'spring-boot-starter-reactor-netty'
	}
	implementation('org.springframework.boot:spring-boot-starter-tomcat')
	implementation('io.projectreactor.netty:reactor-netty-http')
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'

//	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation('org.testcontainers:junit-jupiter:1.17.3')
	testImplementation('org.testcontainers:testcontainers:1.17.3')
//	testImplementation('org.testcontainers:mysql:1.17.3')
	testImplementation('org.testcontainers:postgresql:1.17.3')
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	jvmArgs = [
			"-javaagent:${project.projectDir}/newrelic/newrelic.jar",
			"-Dnewrelic.config.file=${project.projectDir}/newrelic/newrelic.yml",
			"-Dnewrelic.environment=staging",
			"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005",
	]
}

test {
	java {
		jvmArgs = [
				"-javaagent:${project.projectDir}/newrelic/newrelic.jar",
				"-Dnewrelic.config.file=${project.projectDir}/newrelic/newrelic.yml",
				"-Dnewrelic.environment=staging"
		]
	}
}

